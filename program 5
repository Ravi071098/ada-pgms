/* 5. Design and implement C/C++ Program to obtain the Topological
ordering of
vertices in a given digraph.
*/
#include <stdio.h>
#define MAX 10
void fnTopological(int a[MAX][MAX], int n)
{
	int in[MAX] = {0}, out[MAX], top = -1, stack[MAX], i, j, k = 0;
	for (i = 0; i < n; i++)
		for (j = 0; j < n; j++)
			if (a[j][i]) in[i]++;
	while (1)
	{
		for (i = 0; i < n; i++)
			if (in[i] == 0)
			{
				stack[++top] = i;
				in[i] = -1;
			}
		if (top == -1) break;
		    out[k] = stack[top--];
		for (i = 0; i < n; i++)
			if (a[out[k]][i]) in[i]--;
		k++;
	}
	printf("Topological Sorting (JOB SEQUENCE) is:\n");
	for (i = 0; i < k; i++) printf("%d ", out[i] + 1);
	printf("\n");
}
int main()
{
	int a[MAX][MAX], n, i, j;
	printf("Enter number of vertices: ");
	scanf("%d", &n);
	printf("Enter adjacency matrix:\n");
	for (i = 0; i < n; i++)
		for (j = 0; j < n; j++)
			scanf("%d", &a[i][j]);
	fnTopological(a, n);
	return 0;
}
    /* OUTPUT
    Enter number of vertices: 5
    Enter adjacency matrix:
    0 0 1 0 0 0 0 1 0 0 0 0 0 1 1 0 0 0 0 1 0 0 0 0 0
    Topological Sorting (JOB SEQUENCE) is:
    2 1 3 4 5
    */
